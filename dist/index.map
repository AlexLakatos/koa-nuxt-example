{"version":3,"sources":["../nuxt.config.js","../../dist/index.js","index.js"],"names":["router","middleware","modules","plugins","css","build","axios","head","title","titleTemplate","meta","charset","name","content","hid","pkg","author","description","noscript","innerHTML","__dangerouslyDisableSanitizers","createKoaMiddleware","nuxt","renderNuxt","ctx","status","respond","Promise","resolve","reject","res","on","render","req","nuxtRenderCallback","renderPromise","then","module","exports","consola","level","appLogger","withScope","errorLogger","app","Koa","HOST","process","env","PORT","keys","nuxtConfig","dev","start","use","SESSIONS_CONFIG","key","autoCommit","Nuxt","info","builder","Builder","next","state","isJson","request","type","error","console","log","util","inspect","colors","boomError","Boom","boomify","statusCode","message","override","output","body","nuxtError","Router","post","id","shortid","generate","notification","session","manuallyCommit","redirect","teapot","routes","allowedMethods","serverData","listen","koaInitEnd"],"mappings":"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","file":"index.map","sourceRoot":"../server","sourcesContent":["import pkg from '../package.json'\n\nexport default {\n  router: {\n    middleware: [`handle-server-errors`],\n  },\n  modules: [`@nuxtjs/axios`],\n  plugins: [`@/plugins/register-global-components.js`],\n  css: [`@/assets/global-style.css`],\n  build: {},\n  axios: {},\n  head: {\n    title: `ðŸ’š`,\n    titleTemplate: `Koa Nuxt â€“ %s`,\n    meta: [\n      { charset: `utf-8` },\n      { name: `viewport`, content: `width=device-width, initial-scale=1` },\n      { 'http-equiv': `X-UA-Compatible`, content: `IE=edge` },\n      { hid: `author`, name: `author`, content: pkg.author },\n      { hid: `description`, name: `description`, content: pkg.description },\n    ],\n    noscript: [\n      {\n        innerHTML: `\n        <p class=\"no-script-message\">\n          Javascript is disabled but no worries everything should be fine\n        </p>`,\n      },\n    ],\n    __dangerouslyDisableSanitizers: ['noscript'],\n  },\n}\n","'use strict';\n\n// follow create-nuxt-app example\r\n// https://github.com/nuxt/create-nuxt-app/blob/master/template/server/index-koa.js\r\nfunction createKoaMiddleware(nuxt) {\r\n    return function renderNuxt(ctx) {\r\n        // koa defaults to 404 when it sees that status is unset\r\n        ctx.status = 200;\r\n        // Mark request as handled for Koa\r\n        ctx.respond = false;\r\n        return new Promise(function (resolve, reject) {\r\n            ctx.res.on('close', resolve);\r\n            ctx.res.on('finish', resolve);\r\n            nuxt.render(ctx.req, ctx.res, function nuxtRenderCallback(renderPromise) {\r\n                // nuxt.render passes a rejected promise into callback on error.\r\n                renderPromise.then(resolve)[\"catch\"](reject);\r\n            });\r\n        });\r\n    };\r\n}\n\nmodule.exports = createKoaMiddleware;\n","import Koa from 'koa'\nimport Router from 'koa-router'\nimport consola from 'consola'\nimport { Nuxt, Builder } from 'nuxt'\nimport util from 'util'\nimport Boom from 'Boom'\nimport shortid from 'shortid'\nimport logger from 'koa-logger'\nimport session from 'koa-session'\n\nimport nuxtConfig from '../nuxt.config.js'\nimport koaNuxt from '../../dist'\n\nconsola.level = 100\n\nconst appLogger = consola.withScope(`APP`)\nconst errorLogger = consola.withScope(`ERROR`)\n\nconst app = new Koa()\nconst HOST = process.env.HOST || '127.0.0.1'\nconst PORT = process.env.PORT || 3000\n\n// for signed cookies\napp.keys = [\n  `e05fa6f6e4c078ad997ec324e6d69f59829b2e2237c5e1d9e3610fea291793f4`,\n  `64241b9838c5d0d5f94f7e83c71d83af4674f8c84e406a138263a8803a3b1e6f`,\n]\n\nnuxtConfig.dev = !(app.env === 'production')\n\nasync function start() {\n  //////\n  // SERVER CONFIG\n  //////\n\n  app.use(logger())\n\n  const SESSIONS_CONFIG = {\n    key: `kn-example`,\n    // don't autoCommit\n    // â€¢ it will be done after Nuxt render\n    // â€¦ but Nuxt will already have send the response\n    // â€¦Â so session won't be modified\n    // â€¢ https://github.com/koajs/session/issues/89\n    autoCommit: false,\n  }\n  app.use(session(SESSIONS_CONFIG, app))\n\n  //----- NUXT HANDLING\n\n  const nuxt = new Nuxt(nuxtConfig)\n\n  // Build in development\n  if (nuxtConfig.dev) {\n    appLogger.info(`SPA build for dev`)\n    const builder = new Builder(nuxt)\n    await builder.build()\n  }\n\n  const renderNuxt = koaNuxt(nuxt)\n\n  //----- XHR GUESSING\n\n  app.use(async (ctx, next) => {\n    ctx.state.isJson = ctx.request.type === `application/json`\n    await next()\n  })\n\n  //----- ERROR HANDLING\n\n  app.use(async (ctx, next) => {\n    try {\n      await next()\n    } catch (error) {\n      errorLogger.error(`one of the next middleware has errored`)\n      console.log(util.inspect(error, { colors: true }))\n      const boomError = Boom.boomify(error, {\n        statusCode: 500,\n        message: `something really bad happened`,\n        override: false,\n      })\n      ctx.status = boomError.output.statusCode\n\n      if (ctx.state.isJson) return (ctx.body = boomError)\n      // expose error to nuxt\n      // â€¢ used by middleware/handle-server-errors\n      ctx.req.error = boomError\n      try {\n        errorLogger.error(`serving nuxt response`)\n        // still call nuxt middleware\n        await renderNuxt(ctx)\n      } catch (nuxtError) {\n        // we want to make that ANY errors will be catch here\n        errorLogger.error(`serving nuxt response failed`)\n        console.log(util.inspect(nuxtError, { colors: true }))\n        ctx.body = `nuxt error`\n      }\n    }\n  })\n\n  //////\n  // API ROUTING\n  //////\n\n  //----- API\n\n  const router = new Router()\n\n  router.post(`/flash-message`, async ctx => {\n    const id = shortid.generate()\n    const notification = {\n      id,\n      message: `my flash message ${id}`,\n      type: `info`,\n    }\n    if (ctx.state.isJson) return (ctx.body = notification)\n\n    ctx.session = { notification }\n    // persist session with `manuallyCommit`\n    // â€¢Â https://github.com/koajs/session#sessionmanuallycommit\n    await ctx.session.manuallyCommit()\n    ctx.redirect(`/test`)\n  })\n  router.post(`/will-throw`, async ctx => {\n    throw Boom.teapot()\n  })\n\n  //----- MOUNT ROUTER TO APPLICATION\n\n  app.use(router.routes())\n  app.use(router.allowedMethods())\n\n  //////\n  // NUXT FALLBACK\n  //////\n\n  app.use(async (ctx, next) => {\n    // useful for Vuex nuxtServerInit\n    ctx.req.serverData = {\n      ...ctx.session,\n    }\n    // remove flash message\n    delete ctx.session.notification\n    // persist session with `manuallyCommit`\n    // â€¢Â this prevent writing headers after Nuxt response\n    // â€¢Â https://github.com/koajs/session#sessionmanuallycommit\n    await ctx.session.manuallyCommit()\n    // can render with Nuxt\n    await next()\n  })\n\n  app.use(renderNuxt)\n\n  //////\n  // LAUNCHING\n  //////\n\n  app.listen(PORT, HOST, function koaInitEnd() {\n    appLogger.start(\n      `server is listening at ${HOST}:${PORT}`,\n      `on mode ${app.env}`,\n    )\n  })\n}\n\nstart()\n"]}